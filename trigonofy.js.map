{
  "version": 3,
  "sources": ["node_modules/chroma-js/chroma.js", "src/index.ts", "src/utils.ts", "src/palette.ts"],
  "sourcesContent": ["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.2';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n", "// Imports\nimport chroma from 'chroma-js';\nimport { randomEnum } from './utils';\nimport { generatePalette, PaletteType } from './palette';\n\n// Types\nexport interface Options {\n\twidth?: number;\n\theight?: number;\n\ttriangleHeight?: number;\n\tvariance?: number;\n\tbaseColor?: string;\n\tpaletteType?: PaletteType;\n}\n\n// Enums\nexport enum GradientType {\n\tLinear,\n\tRadial,\n}\n\n// Main class\nexport class Pattern {\n\twidth: number;\n\theight: number;\n\ttriangleHeight: number;\n\ttriangleVariance: number;\n\tbaseColor: chroma.Color;\n\tpalette: string[];\n\n\tconstructor(\n\t\topts: Options = {\n\t\t\twidth: 800,\n\t\t\theight: 600,\n\t\t\ttriangleHeight: 75,\n\t\t\tvariance: 0.75,\n\t\t}\n\t) {\n\t\t// Set default value\n\t\tthis.width = opts.width || 800;\n\t\tthis.height = opts.height || 600;\n\t\tthis.triangleHeight = opts.triangleHeight || 75;\n\t\tthis.triangleVariance = opts.variance || 0.75;\n\t\tthis.baseColor = chroma.valid(opts.baseColor)\n\t\t\t? chroma(opts.baseColor)\n\t\t\t: chroma.random();\n\n\t\t// Generate palette\n\t\tlet paletteType =\n\t\t\topts.paletteType in PaletteType\n\t\t\t\t? opts.paletteType\n\t\t\t\t: randomEnum(PaletteType);\n\n\t\tthis.palette = generatePalette(this.baseColor, paletteType);\n\n\t\tconsole.log(this.palette);\n\n\t\tthis.palette.forEach((hex) => {\n\t\t\tlet div = document.createElement('div');\n\t\t\tdiv.style.backgroundColor = hex;\n\t\t\tdiv.style.width = '100px';\n\t\t\tdiv.style.height = '100px';\n\t\t\tdocument.body.appendChild(div);\n\t\t});\n\t}\n}\n", "export function randomEnum(enumeration: Record<string, any>): number {\n\tconst values = Object.values(enumeration).filter((val) => isFinite(val));\n\tconst idx = Math.floor(Math.random() * values.length);\n\treturn values[idx];\n}\n\nexport function randomInt(min: number, max: number): number {\n\tif (min < 0) min = 0;\n\tif (max < 0) max = 0;\n\tif (min > max) [min, max] = [max, min];\n\n\tlet delta = max - min;\n\tlet random = Math.floor(Math.random() * (delta + 1));\n\treturn min + random;\n}\n", "import chroma from 'chroma-js';\nimport { randomInt } from './utils';\n\nexport enum PaletteType {\n\tChaos,\n\tComplementary,\n\tMonochromatic,\n\tAnalogous,\n\tTriadic,\n\tTetradic,\n}\n\nexport function generatePalette(\n\tbase: chroma.Color,\n\ttype: PaletteType\n): string[] {\n\tswitch (type) {\n\t\tcase PaletteType.Complementary:\n\t\t\treturn complementaryPalette(base);\n\t\tcase PaletteType.Monochromatic:\n\t\t\treturn monochromaticPalette(base);\n\t\tcase PaletteType.Analogous:\n\t\t\treturn analogousPalette(base);\n\t\tcase PaletteType.Triadic:\n\t\t\treturn triadicPalette(base);\n\t\tcase PaletteType.Tetradic:\n\t\t\treturn tetradicPalette(base);\n\t\tdefault:\n\t\t\treturn chaosPalette(base);\n\t}\n}\n\nfunction chaosPalette(base: chroma.Color): string[] {\n\tlet paletteSize = randomInt(4, 10);\n\n\tlet nBase = randomInt(2, paletteSize / 2);\n\tlet baseColors = [base];\n\tfor (let i = 1; i < nBase; i++) {\n\t\tbaseColors.push(chroma.random());\n\t}\n\n\treturn chroma.scale(baseColors).mode('lch').colors(paletteSize);\n}\n\nfunction complementaryPalette(base: chroma.Color): string[] {\n\tlet [h, s, l] = base.hsl();\n\tlet accent = chroma.hsl(h - 180, s, l);\n\tlet paletteSize = randomInt(4, 10);\n\treturn chroma.scale([base, accent]).mode('lch').colors(paletteSize);\n}\n\nfunction monochromaticPalette(base: chroma.Color): string[] {\n\tlet [h, s, _] = base.hsl();\n\tlet paletteSize = randomInt(4, 10);\n\tlet lStep = 1 / (paletteSize + 1);\n\n\tlet palette: string[] = [];\n\tfor (let i = paletteSize; i >= 1; i--) {\n\t\tpalette.push(chroma.hsl(h, s, i * lStep).hex());\n\t}\n\n\treturn palette;\n}\n\nfunction analogousPalette(base: chroma.Color): string[] {\n\tlet [h, s, l] = base.hsl();\n\tlet accent1 = chroma.hsl(h + 30, s, l);\n\tlet accent2 = chroma.hsl(h + 60, s, l);\n\n\tlet paletteSize = randomInt(4, 10);\n\treturn chroma.scale([base, accent1, accent2]).mode('lch').colors(paletteSize);\n}\n\nfunction triadicPalette(base: chroma.Color): string[] {\n\tlet [h, s, l] = base.hsl();\n\tlet accent1 = chroma.hsl(h + 120, s, l);\n\tlet accent2 = chroma.hsl(h + 240, s, l);\n\n\tlet paletteSize = randomInt(4, 10);\n\treturn chroma.scale([base, accent1, accent2]).mode('lch').colors(paletteSize);\n}\n\nfunction tetradicPalette(base: chroma.Color): string[] {\n\tlet [h, s, l] = base.hsl();\n\tlet accent1 = chroma.hsl(h + 90, s, l);\n\tlet accent2 = chroma.hsl(h + 180, s, l);\n\tlet accent3 = chroma.hsl(h + 270, s, l);\n\n\tlet paletteSize = randomInt(4, 10);\n\treturn chroma\n\t\t.scale([base, accent1, accent2, accent3])\n\t\t.mode('lch')\n\t\t.colors(paletteSize);\n}\n"],
  "mappings": "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",
  "names": []
}
